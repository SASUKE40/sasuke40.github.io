{"componentChunkName":"component---src-templates-blog-post-js","path":"/try-deno2/","result":{"data":{"site":{"siteMetadata":{"title":"Edward Elric's Blog"}},"markdownRemark":{"id":"47044ad5-5e58-5149-bdb9-c055133154f4","excerpt":"前言 ry 近期把 deno 的第二版原型从 deno2 文件夹中转移到 src 上了，并初步完成之前定下针对 unprivileged 部分的改造目标： Use the gn build system for fast builds, sane configuration, and easy linking into…","html":"<h1><a name=\"c2pnvr\"></a>前言</h1>\n<p>ry 近期把 <span data-type=\"color\" style=\"color:rgb(26, 26, 26)\"><span data-type=\"background\" style=\"background-color:rgb(255, 255, 255)\">deno 的第二版原型从 deno2 文件夹中转移到 src 上了，并初步完成之前定下针对 </span></span><span data-type=\"color\" style=\"color:rgb(36, 41, 46)\"><span data-type=\"background\" style=\"background-color:rgb(255, 255, 255)\">unprivileged 部分的改造目标：</span></span></p>\n<ul>\n<li>Use the gn build system for fast builds, sane configuration, and easy linking into Chrome.</li>\n<li>Use V8 snapshots to improve startup time.</li>\n<li>Remove Golang. Although it has been working nicely, I am concerned the double GC will become a problem sometime down the road.</li>\n<li>Distribute a C++ library called libdeno, containing the snapshotted typescript runtime.</li>\n<li>Test the message passing and other functionality at that layer before involving higher level languages.\n翻译：</li>\n<li>使用 <a href=\"https://link.zhihu.com/?target=https%3A//chromium.googlesource.com/chromium/src/%2B/master/tools/gn/docs/quick_start.md\">GN</a> 这个构建工具，这是 chromium 团队使用的构建工具</li>\n<li>使用 V8 Snapshots 提升启动速度（已完成）</li>\n<li><strong>移除 Golang，</strong>因为不想同时存在两个 GC（Go 和 TS）</li>\n<li>弄了一个 C++ 库叫 libdeno，负责 TS 的运行时环境</li>\n</ul>\n<h1><a name=\"higrue\"></a>试玩</h1>\n<h2><a name=\"gkewza\"></a>克隆 <a href=\"http://commondatastorage.googleapis.com/chrome-infra-docs/flat/depot_tools/docs/html/depot_tools_tutorial.html#_setting_up\">Depot Tools</a></h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> clone https://chromium.googlesource.com/chromium/tools/depot_tools.git</code></pre></div>\n<h2><a name=\"63qecv\"></a>配置环境变量</h2>\n<p>这里我是把配置到 <code class=\"language-text\">.zshrc</code> 文件中</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token environment constant\">$PATH</span>:/path/to/depot_tools</code></pre></div>\n<h2><a name=\"vxbdkn\"></a>克隆仓库</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> clone git@github.com:ry/deno.git</code></pre></div>\n<h2><a name=\"tgyeyg\"></a>进入到 src 文件夹</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> deno/src</code></pre></div>\n<h2><a name=\"fnbzgv\"></a>获取包和 v8</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">gclient <span class=\"token function\">sync</span> --no-history</code></pre></div>\n<p>然后你就会在 <code class=\"language-text\">src</code> 下看到一堆三方包和 <code class=\"language-text\">v8</code> 被下载下来</p>\n<p><img src=\"https://cdn.yuque.com/yuque/0/2018/png/99653/1529995554027-c933cf86-d4df-4399-a4e2-eb1a7a5a9e31.png\" alt=\"image.png | left | 747x538\"></p>\n<h2><a name=\"pznmvu\"></a>安装 js 依赖</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> js\n<span class=\"token function\">yarn</span> <span class=\"token function\">install</span>\ngn gen out/Debug --args<span class=\"token operator\">=</span><span class=\"token string\">'cc_wrapper=\"ccache\" is_debug=true '</span></code></pre></div>\n<h2><a name=\"3aomhk\"></a>使用 <span data-type=\"color\" style=\"color:rgb(36, 41, 46)\"><span data-type=\"background\" style=\"background-color:rgb(255, 255, 255)\">ninja </span></span>编译</h2>\n<p>mac 上得先安装 <code class=\"language-text\">ccache</code> 不然会报 <code class=\"language-text\">subcommand failed</code> 错误</p>\n<p><img src=\"https://cdn.yuque.com/yuque/0/2018/png/99653/1529995488649-004e99f7-50ff-4456-b394-15c20a1ec5ff.png\" alt=\"image.png | left | 747x342\"></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">brew <span class=\"token function\">install</span> ccache</code></pre></div>\n<p>在 <code class=\"language-text\">src</code> 下进行编译</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">ninja -C out/Debug/ deno</code></pre></div>\n<p><img src=\"https://cdn.yuque.com/yuque/0/2018/png/99653/1529995461197-704e52ca-67a1-4682-a8fd-7060b393d590.png\" alt=\"image.png | left | 747x491\"></p>\n<h2><a name=\"y4gdma\"></a>试着执行</h2>\n<p>这样 deno 的执行文件就产生了</p>\n<p><img src=\"https://cdn.yuque.com/yuque/0/2018/png/99653/1529996003157-e93454bd-02ab-4daf-9cdb-f617221510c1.png\" alt=\"image.png | left | 747x423\"></p>\n<p>接着运行看看</p>\n<p><img src=\"https://cdn.yuque.com/yuque/0/2018/png/99653/1529996089799-7ddd86b3-9b2b-421d-abf1-e8044df6c462.png\" alt=\"image.png | left | 747x170\"></p>\n<p>打印出了 v8 的版本 <span data-type=\"color\" style=\"color:rgb(36, 41, 46)\"><span data-type=\"background\" style=\"background-color:rgb(255, 255, 255)\"><code>V8 6.8.275.14</code></span></span><span data-type=\"color\" style=\"color:rgb(36, 41, 46)\"><span data-type=\"background\" style=\"background-color:rgb(255, 255, 255)\"> </span></span></p>","frontmatter":{"title":"试玩 deno2","date":"2018-06-28T00:00:00.000Z"}}},"pageContext":{"slug":"/try-deno2/","previous":{"fields":{"slug":"/you-may-dont-need-drevied-state/"},"frontmatter":{"title":"你可能不需要 Derived State"}},"next":{"fields":{"slug":"/try-vscode-remote/"},"frontmatter":{"title":"尝试一下 VSCode Remote 开发 Node 应用"}}}}}