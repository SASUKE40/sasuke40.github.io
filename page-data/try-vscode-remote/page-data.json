{"componentChunkName":"component---src-templates-blog-post-js","path":"/try-vscode-remote/","result":{"data":{"site":{"siteMetadata":{"title":"Edward Elric's Blog"}},"markdownRemark":{"id":"f8d61d52-4ae8-5928-b3bc-a03fbee57e57","excerpt":"第一步 安装 VSCode Insiders \nVSCode Insiders 官网\nhttps://code.visualstudio.com/insiders/code.visualstudio.com\n目前只能在 VSCode Insiders 版本体验 Remote Development…","html":"<h2>第一步 安装 VSCode Insiders</h2>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2020/png/99653/1578405743917-54d5a517-841b-43ea-a993-df3f3b38f763.png#align=left&#x26;display=inline&#x26;height=559&#x26;originHeight=559&#x26;originWidth=720&#x26;size=0&#x26;status=done&#x26;style=none&#x26;width=720\">\nVSCode Insiders 官网\n<a href=\"https://code.visualstudio.com/insiders/code.visualstudio.com\">https://code.visualstudio.com/insiders/code.visualstudio.com</a>\n目前只能在 VSCode Insiders 版本体验 Remote Development</p>\n<h2>第二步 安装 Remote Development 插件</h2>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2020/png/99653/1578405743932-53418a7d-b276-4d95-8633-661c4b392296.png#align=left&#x26;display=inline&#x26;height=558&#x26;originHeight=558&#x26;originWidth=720&#x26;size=0&#x26;status=done&#x26;style=none&#x26;width=720\">\nRemote Development 插件\n<a href=\"https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.vscode-remote-extensionpackmarketplace.visualstudio.com\">https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.vscode-remote-extensionpackmarketplace.visualstudio.com</a></p>\n<h2>第三步 配置 SSH Config</h2>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2020/png/99653/1578405743885-aff00c17-7d47-4e5f-aa2c-0611357ee7b5.png#align=left&#x26;display=inline&#x26;height=558&#x26;originHeight=558&#x26;originWidth=720&#x26;size=0&#x26;status=done&#x26;style=none&#x26;width=720\">\nSSH 配置文件\nHost ubuntu\nHostName <your-remote-host>\nUser ubuntu\n这里需要准备一个远端的机器，这样可以直接访问到服务器的文件。\n<img src=\"https://cdn.nlark.com/yuque/0/2020/png/99653/1578405743887-f9d7a7df-f9f5-4599-952a-7a658117c13d.png#align=left&#x26;display=inline&#x26;height=558&#x26;originHeight=558&#x26;originWidth=720&#x26;size=0&#x26;status=done&#x26;style=none&#x26;width=720\">\n远端文件管理</p>\n<h2>第四步 编写 Node 应用</h2>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2020/png/99653/1578405743913-8e957743-919c-4cde-8d25-1c936268274a.png#align=left&#x26;display=inline&#x26;height=558&#x26;originHeight=558&#x26;originWidth=720&#x26;size=0&#x26;status=done&#x26;style=none&#x26;width=720\">\n一个简单的 node 应用\n基本就 4 个文件，已经放到 github 上：\n<a href=\"https://github.com/SASUKE40/docker_web_appgithub.com\">https://github.com/SASUKE40/docker_web_appgithub.com</a></p>\n<h2>第五步 构建推送 docker 镜像</h2>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2020/png/99653/1578405743894-a5a67fa5-9c6f-4714-9bff-11cc6a3f1228.png#align=left&#x26;display=inline&#x26;height=395&#x26;originHeight=395&#x26;originWidth=720&#x26;size=0&#x26;status=done&#x26;style=none&#x26;width=720\">\nDocker Hub\n<a href=\"https://hub.docker.com/hub.docker.com\">https://hub.docker.com/hub.docker.com</a>\n在应用项目目录下执行镜像构建\ndocker build -t edward40/node-web-app .\n查看构建的镜像\ndocker images\n<img src=\"https://cdn.nlark.com/yuque/0/2020/png/99653/1578405743906-f9d99e10-71b5-4d15-86a1-f57560ed8092.png#align=left&#x26;display=inline&#x26;height=486&#x26;originHeight=486&#x26;originWidth=720&#x26;size=0&#x26;status=done&#x26;style=none&#x26;width=720\">\n构建查看 Docker 镜像\n本地试跑镜像\ndocker run -p 3000:8080 -d edward40/node-web-app\n访问 <a href=\"http://localhost:3000/\">http://localhost:3000</a>\n<img src=\"https://cdn.nlark.com/yuque/0/2020/png/99653/1578405743937-838f6346-89c3-48fb-ac35-3373fd56c6b3.png#align=left&#x26;display=inline&#x26;height=456&#x26;originHeight=456&#x26;originWidth=720&#x26;size=0&#x26;status=done&#x26;style=none&#x26;width=720\">\n本地查看效果\n推送 Docker 镜像可以在终端执行\ndocker push edward40/docker<em>web</em>app:tagname\n不过这里我用官方的自动化构建\n<img src=\"https://cdn.nlark.com/yuque/0/2020/png/99653/1578405743885-3f850c63-2cb3-41d9-81ca-1211546b3026.png#align=left&#x26;display=inline&#x26;height=456&#x26;originHeight=456&#x26;originWidth=720&#x26;size=0&#x26;status=done&#x26;style=none&#x26;width=720\">\n配置自动化构建镜像\n只要推送代码就会 build 出镜像\n<img src=\"https://cdn.nlark.com/yuque/0/2020/png/99653/1578405743912-cfe78e3f-c1be-4f98-83b0-e235daa56acf.png#align=left&#x26;display=inline&#x26;height=456&#x26;originHeight=456&#x26;originWidth=720&#x26;size=0&#x26;status=done&#x26;style=none&#x26;width=720\">\n自动化构建流程</p>\n<h2>第六步 服务器上跑镜像</h2>\n<p>在 SSH 终端中拉取 Node 应用镜像\nsudo docker pull edward40/docker<em>web</em>app\n<img src=\"https://cdn.nlark.com/yuque/0/2020/png/99653/1578405744425-4a2520a6-6740-42f6-8d93-a4f4c42fd3c9.png#align=left&#x26;display=inline&#x26;height=558&#x26;originHeight=558&#x26;originWidth=720&#x26;size=0&#x26;status=done&#x26;style=none&#x26;width=720\">\n服务端拉取镜像\n服务端启动 Container\nsudo docker run -p 80:8080 -d edward40/docker<em>web</em>app</p>\n<h2>第七步 本地开发 Docker Container</h2>\n<p>安装 Docker 插件\n<a href=\"https://marketplace.visualstudio.com/items?itemName=PeterJausovec.vscode-dockermarketplace.visualstudio.com\">https://marketplace.visualstudio.com/items?itemName=PeterJausovec.vscode-dockermarketplace.visualstudio.com</a>\n项目目录创建配置文件\n<img src=\"https://cdn.nlark.com/yuque/0/2020/png/99653/1578405743908-75e153f8-5f30-44ff-b834-03f1c1af31c9.png#align=left&#x26;display=inline&#x26;height=558&#x26;originHeight=558&#x26;originWidth=720&#x26;size=0&#x26;status=done&#x26;style=none&#x26;width=720\">\n创建 Container 配置文件\n不过因为使用 Alipine 导致无法打开\n<img src=\"https://cdn.nlark.com/yuque/0/2020/png/99653/1578405743920-7b386948-9bb9-4b72-962f-df34bd871658.png#align=left&#x26;display=inline&#x26;height=558&#x26;originHeight=558&#x26;originWidth=720&#x26;size=0&#x26;status=done&#x26;style=none&#x26;width=720\">\n需要切换别的 Linux 系统，并增加 .devcontainer.json 文件\n{\n“name”: “Node.js Sample”,\n“dockerFile”: “Dockerfile”,\n“appPort”: 3000,\n“extensions”: []\n}\nDockerfile 的 alpine 换成 lts 版本\nFROM node:lts</p>\n<h1>Create app directory</h1>\n<p>WORKDIR /usr/src/app</p>\n<h1>Install app dependencies</h1>\n<h1>A wildcard is used to ensure both package.json AND package-lock.json are copied</h1>\n<h1>where available (npm@5+)</h1>\n<p>COPY package*.json ./</p>\n<p>RUN npm install</p>\n<h1>If you are building your code for production</h1>\n<h1>RUN npm ci —only=production</h1>\n<h1>Bundle app source</h1>\n<p>COPY . .</p>\n<p>EXPOSE 8080\nCMD [ “npm”, “start” ]\n<img src=\"https://cdn.nlark.com/yuque/0/2020/png/99653/1578405743946-1675fb65-b892-49ae-aca4-7fab222b3909.png#align=left&#x26;display=inline&#x26;height=558&#x26;originHeight=558&#x26;originWidth=720&#x26;size=0&#x26;status=done&#x26;style=none&#x26;width=720\">\n点击右下在容器中打开\n打开 Shell\n<img src=\"https://cdn.nlark.com/yuque/0/2020/png/99653/1578405743964-e306f894-05c6-4119-8c0f-e38f76faaf6d.png#align=left&#x26;display=inline&#x26;height=510&#x26;originHeight=510&#x26;originWidth=720&#x26;size=0&#x26;status=done&#x26;style=none&#x26;width=720\">\n最终可以在容器中方便用终端\n<img src=\"https://cdn.nlark.com/yuque/0/2020/png/99653/1578405743934-6f5c8340-3a92-4f55-a40b-e503dbde9afd.png#align=left&#x26;display=inline&#x26;height=558&#x26;originHeight=558&#x26;originWidth=720&#x26;size=0&#x26;status=done&#x26;style=none&#x26;width=720\">\n使用容器终端</p>\n<h2>使用总结</h2>\n<p>VSCode 的 Remote SSH 插件完美击中运维痛点，以后可以抛弃 Vim 直接在 VSCode 里面改东西，非常方便。\n而 Remote Containers 插件就有点鸡肋，连到 Docker 容器中好像也没什么大的意义。个人更倾向代码提交触发 Docker Hub 的自动构建能力，并服务器上更新 Docker 镜像容器这样的工作流。如果有小伙伴发现这个插件更好的用法务必留言。\n最后，VSCode Remote Development 快快 Release 吧！</p>","frontmatter":{"title":"尝试一下 VSCode Remote 开发 Node 应用","date":"2019-05-17T00:00:00.000Z"}}},"pageContext":{"slug":"/try-vscode-remote/","previous":{"fields":{"slug":"/try-deno2/"},"frontmatter":{"title":"试玩 deno2"}},"next":{"fields":{"slug":"/try-writing-fe-with-rust-yew/"},"frontmatter":{"title":"尝试用 Rust + Yew 写高性能前端页面"}}}}}